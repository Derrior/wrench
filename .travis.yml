language: cpp

sudo: required

matrix:
  include:
    - os: osx
      compiler: clang
    - os: linux
      compiler: gcc
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
            - boost-latest
          packages:
            - g++-5
            - gcc-5
            - cmake
            - cmake-data
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
            - libboost-all-dev
      env: GCC_VERSION=5
    - os: linux
      compiler: gcc
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
            - boost-latest
          packages:
            - g++-6
            - gcc-6
            - cmake
            - cmake-data
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
            - libboost-all-dev
      env: GCC_VERSION=6
    - os: linux
      compiler: clang
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
            - george-edison55-precise-backports
            - boost-latest
          packages:
            - clang-3.6
            - cmake
            - cmake-data
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
            - libboost-all-dev
      env: CLANG_VERSION=3.6
    - os: linux
      compiler: clang
      dist: trusty
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
            - george-edison55-precise-backports
            - boost-latest
          packages:
            - clang-3.7
            - cmake
            - cmake-data
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
            - libboost-all-dev
      env: CLANG_VERSION=3.7

before_install:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install --HEAD python3 doxygen; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then virtualenv venv -p python3; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then source venv/bin/activate; fi
  # configure coveralls
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install lcov; else sudo apt-get install lcov; fi
  - sudo gem install coveralls-lcov

install:
  # install SimGrid
#  - wget http://gforge.inria.fr/frs/download.php/file/36621/SimGrid-3.15.tar.gz
#  - tar xf SimGrid-3.15.tar.gz
#  - cd SimGrid-3.15 && cmake . && make && sudo make install && cd ..
  - git clone git://scm.gforge.inria.fr/simgrid/simgrid.git
  - cd simgrid && cmake . && make && sudo make install && cd ..
  # install Lemon
  - wget http://lemon.cs.elte.hu/pub/sources/lemon-1.3.1.tar.gz
  - tar -xf lemon-1.3.1.tar.gz
  - cd lemon-1.3.1 && cmake . && make && sudo make install && cd ..
  # install pugixml
  - wget https://github.com/zeux/pugixml/releases/download/v1.8.1/pugixml-1.8.1.tar.gz
  - tar -xf pugixml-1.8.1.tar.gz
  - cd pugixml-1.8 && cmake . && make && sudo make install && cd ..
  # install googletest
  - wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
  - tar xf release-1.8.0.tar.gz
  - cd googletest-release-1.8.0/googletest && cmake . && make && sudo make install && cd ../..

script:
  - mkdir build && cd build
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON ..
  - make all unit_tests
  - ./unit_tests
  - cd ..

after_success:
  - cd build
  # coverage analysis
  - lcov --directory . --capture --output-file coverage.info
  - lcov --remove coverage.info '*/test/*' '*/examples/*' '*/include/*' --output-file coverage.info
  - lcov --list coverage.info
  - coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
  # generate documentation
  - cd .. && chmod +x generate_documentation.sh
  - doxygen --version
  - ./generate_documentation.sh --USER --INTERNAL --DEVELOPER

deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GITHUB_TOKEN
  local_dir: ./docs/gh-pages
  on:
    branch: master

notifications:
  email:
    recipients:
      - wrench@mailman.isi.edu
    on_success: change
    on_failure: always